# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/02_upload.ipynb (unless otherwise specified).

__all__ = ['nb2medium']

# Cell
import os
from .API import post_article
from .convert import (
    HidePreprocessor,
    GisterPreprocessor,
    ImagePreprocessor,
    WriteMarkdown )
from nbconvert.exporters import MarkdownExporter
from nbconvert.preprocessors import TagRemovePreprocessor

def nb2medium(
    title,
    notebook
):
    # declare exporter
    m = MarkdownExporter()
    # Hide Preprocessors
    m.register_preprocessor(HidePreprocessor(mode = 'source', patterns = ['^#\s*hide-source']), enabled = True)
    m.register_preprocessor(HidePreprocessor(mode = 'output', patterns = ['^#\s*hide-output']), enabled = True)
    m.register_preprocessor(HidePreprocessor(mode = 'cell', patterns = ['^#\s*hide-cell']), enabled = True)
    m.register_preprocessor(
        TagRemovePreprocessor(
            remove_input_tags = ('hide-source',),
            remove_all_outputs_tags = ('hide-output',),
            remove_cell_tags = ('hide-cell',),
            enabled = True)
    )
    # Gister Preprocessors
    m.register_preprocessor(GisterPreprocessor(patterns = ['^#\s*gist']), enabled = True)
    #Image Preprocessors
    m.register_preprocessor(ImagePreprocessor(), enabled = True)

    # process notebook
    b,r = m.from_filename(notebook)

    # write notebook to Markdown
    path, name = os.path.split(notebook)
    basename, ext = os.path.splitext(name)
    WriteMarkdown(b,r, filename = basename)

    # upload markdown document as medium post
    return post_article(
        title = title,
        content = open(f"{os.path.splitext(notebook)[0]}.md").read()
    )


